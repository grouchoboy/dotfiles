export XDG_CONFIG_HOME=$HOME/.config

#source <(kubectl completion zsh)

export EDITOR='nvim'
alias vim='nvim'
alias em="emacs -nw"
alias c="docker compose"
# alias k="kubectl"

export BAT_THEME='Catppuccin Frappe'

addToPathFront() {
    if [[ "$PATH" != *"$1"* ]]; then
        export PATH=$1:$PATH
    fi
}

addToPathFront $HOME/.local/bin

datadisk() {
	cd /run/media/manu/DataDisk
}

datassd() {
	cd /run/media/manu/DataSSD
}

HOST=$(awk -F= '/^NAME=/{print $2}' /etc/os-release | tr -d '"')

if [ "$HOST" = "Fedora Linux" ]; then
    source /usr/share/fzf/shell/key-bindings.zsh
    # eval "$(~/.local/bin/mise activate zsh)"

    # The next line updates PATH for the Google Cloud SDK.
    # if [ -f "${HOME}/.local/google-cloud-sdk/path.zsh.inc" ]; then . "${HOME}/.local/google-cloud-sdk/path.zsh.inc"; fi

    # The next line enables shell command completion for gcloud.
    # if [ -f "{$HOME}/.local/google-cloud-sdk/completion.zsh.inc" ]; then . "${HOME}/.local/google-cloud-sdk/completion.zsh.inc"; fi
fi

if [ "$HOST" = "Arch Linux" ]; then
    eval "$(mise activate zsh)"
fi

if [ -e /run/.containerenv ] ; then
    ZSH_THEME="bira"
    source $ZSH/oh-my-zsh.sh
    
    alias podman="distrobox-host-exec podman"
    alias c="docker-compose"
    # export DOCKER_HOST=unix://$XDG_RUNTIME_DIR/podman/podman.sock
fi

HOSTNAME=$(hostname)

if [ "$HOSTNAME" = "DESKTOP-U9LRV0I" ] ; then
    source $HOME/dotfiles/work/zshwork
fi

export PATH="${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH"
fpath=(${ASDF_DATA_DIR:-$HOME/.asdf}/completions $fpath)
autoload -Uz compinit && compinit


function current_dir() {
    local current_dir=$PWD
    if [[ $current_dir == $HOME ]]; then
        current_dir="~"
    else
        current_dir=${current_dir##*/}
    fi

    echo $current_dir
}

function change_tab_title() {
    local title=$1
    command nohup zellij action rename-tab $title >/dev/null 2>&1
}

function is_git_repo() {
    git rev-parse --git-dir > /dev/null 2>&1
}

function set_tab_to_working_dir() {
    if is_git_repo; then
	local title=$(git rev-parse --show-toplevel)
	title=${title##*/}

	change_tab_title $title
    else
	local result=$?
	local title=$(current_dir)

	change_tab_title $title
    fi
    
}

if [[ -n $ZELLIJ ]]; then
    add-zsh-hook precmd set_tab_to_working_dir
fi
